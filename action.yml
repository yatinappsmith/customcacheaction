name: "Publish to Docker"
description: "Build a container image and Pushes it to Docker registry"

inputs:
  repo_name:
    description: "Username for image registry"
    required: true
  token:
    description: "Password for image registry"
    required: true
  filename:
    description: "Name of the image to push"
    required: true
  cache_name: 
    description: "How to tag the image. Default: latest"
    required: true
  actiontype: 
    description: "How to tag the image. Default: latest"
    required: true
runs:
  using: "composite"
  steps:
      - name: Setup BuildX
        uses: docker/setup-buildx-action@v1
        
      - name: Store file in cache
        with:
          cachetoken: ${{inputs.token}}
          gitrepo:  ${{inputs.repo_name}}
          filename:  ${{inputs.filename}}
          cachename:  ${{inputs.cache_name}}
          git_repo:  ${{inputs.repo_name}}
      run: |
          mkdir cacherepo
          cd ./cacherepo
          git clone https://$cachetoken@github.com/git_repo
          export dir=`ls`
          cd $dir
          mkdir $cachename
          cp $filename ./$cachename/
          git add ./$cachename/$filename
          git commit -m "$cachename"
          git push

      - name: Login to the Registry
        uses: docker/login-action@v1
        with:
          username: ${{inputs.registry_username}}
          password: ${{inputs.registry_password}}
      
      - name: Set the tag
        shell: bash
        run: |
          if [ -z "${{inputs.tag}}" ]
          then
            echo "final_tag=latest" >> $GITHUB_ENV
          else
            echo "final_tag=${{inputs.tag}}" >> $GITHUB_ENV
          fi
      
      - name: Build and Push the Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{inputs.registry_username}}/${{inputs.image_name}}:${{env.final_tag}}
